name: Deploy
on:
  release:
    types: [published]
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-build-${{ env.cache-name }}-
          ${{ runner.OS }}-build-
          ${{ runner.OS }}-
    - run: make envvar

    # Pull the latest image to build, and avoid caching pull-only images.
    # (docker pull is faster than caching in most cases.)
    - run: docker-compose pull

    # In this step, this action saves a list of existing images,
    # the cache is created without them in the post run.
    # It also restores the cache if it exists.
    - uses: satackey/action-docker-layer-caching@v0.0.8
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - run: make image

    - run: make test

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Push
      uses: vitalyliber/dokku-github-action@v6.1
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
        HOST: ${{ secrets.DOKKU_HOST }}
        PROJECT: ${{ secrets.DOKKU_APPNAME }}
        FORCE_DEPLOY: true
    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      with:
        environment: production
