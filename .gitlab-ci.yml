image: docker:latest

stages:
  - build
  - test
  - deploy

services:
  - docker:dind

variables:
  APP_NAME: jazzband
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375/


build:
  stage: build
  before_script:
    - apk add --no-cache py-pip python-dev libffi-dev openssl-dev gcc libc-dev make
    - pip install docker-compose
  script:
    - docker pull $CI_REGISTRY_IMAGE:npm || true
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build
        --target npm
        --cache-from $CI_REGISTRY_IMAGE:npm
        --tag $CI_REGISTRY_IMAGE:npm
        "."
    - cp .env-dist .env
    - docker-compose build
    - docker-compose up -d
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:npm
    - docker push $CI_REGISTRY_IMAGE:latest

test:
  stage: test
  before_script:
    - docker info
    - apk add --update py-pip make npm build-base python2-dev libffi-dev openssl-dev
    - pip install docker-compose
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
  script:
    - cp .env-dist .env
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker-compose run --rm web pytest tests/

deploy:
  image: ilyasemenov/gitlab-ci-git-push
  stage: deploy
  environment:
    name: production
    url: https://$APP_NAME.co/
  only:
    - master
  script:
    - git-push ssh://dokku@websushi.org:22/$APP_NAME
  when: manual
